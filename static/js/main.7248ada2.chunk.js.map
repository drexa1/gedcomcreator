{"version":3,"sources":["app.tsx","index.tsx"],"names":["App","files","setFiles","useState","fileInputRef","useRef","handleFiles","newFiles","Array","from","_jsxs","className","children","_jsx","Header","as","FormattedMessage","id","defaultMessage","Icon","name","onClick","handleClick","_fileInputRef$current","current","click","onDrop","event","preventDefault","dataTransfer","onDragOver","e","type","multiple","ref","onChange","target","style","display","Button","primary","disabled","messages","es","messages_es","pl","messages_pl","language","navigator","split","ReactDOM","createRoot","document","getElementById","render","IntlProvider","locale"],"mappings":"mNA8EeA,MA1EHA,KACR,MAAOC,EAAOC,GAAYC,mBAAiB,IACrCC,EAAeC,iBAAyB,MAaxCC,EAAeC,IACbA,GACAL,EAAS,IAAID,KAAUO,MAAMC,KAAKF,IACtC,EAGJ,OACIG,eAAA,OAAKC,UAAU,OAAMC,SAAA,CAEjBC,cAACC,IAAM,CAACC,GAAG,KAAIH,SAACC,cAACG,IAAgB,CAACC,GAAG,YAAYC,eAAe,+DAChER,eAAA,KAAAE,SAAA,CAAGC,cAACG,IAAgB,CAACC,GAAG,WAAWC,eAAe,8FAA6F,IAACL,cAACM,IAAI,CAACC,KAAK,mBAE3JV,eAAA,OAAKC,UAAU,uBAAsBC,SAAA,CACjCC,cAAA,MAAAD,SAAIC,cAACG,IAAgB,CAACC,GAAG,kBAAkBC,eAAe,yBAC1DR,eAAA,OAAKC,UAAU,yBAAwBC,SAAA,CACnCF,eAAA,OAAKC,UAAU,kBAAiBC,SAAA,CAC5BC,cAAA,MAAAD,SAAIC,cAACG,IAAgB,CAACC,GAAG,2BAA2BC,eAAe,eACnEL,cAAA,KAAAD,SAAGC,cAACG,IAAgB,CAACC,GAAG,0BAA0BC,eAAe,+FAErER,eAAA,OAAKC,UAAU,kBAAiBC,SAAA,CAC5BC,cAAA,MAAAD,SAAIC,cAACG,IAAgB,CAACC,GAAG,0BAA0BC,eAAe,cAClEL,cAAA,KAAAD,SAAGC,cAACG,IAAgB,CAACC,GAAG,yBAAyBC,eAAe,uFAEpER,eAAA,OAAKC,UAAU,kBAAiBC,SAAA,CAC5BC,cAAA,MAAAD,SAAIC,cAACG,IAAgB,CAACC,GAAG,0BAA0BC,eAAe,cAClEL,cAAA,KAAAD,SAAGC,cAACG,IAAgB,CAACC,GAAG,yBAAyBC,eAAe,mGAK5EL,cAAA,OAAKF,UAAU,sBAAqBC,SAChCF,eAAA,OACIC,UAAU,cACVU,QA5CIC,KAAO,IAADC,EACF,QAApBA,EAAAnB,EAAaoB,eAAO,IAAAD,GAApBA,EAAsBE,OAAO,EA4CjBC,OA1CIC,IAChBA,EAAMC,iBACNtB,EAAYqB,EAAME,aAAa5B,MAAM,EAyCzB6B,WAAaC,GAAMA,EAAEH,iBAAiBhB,SAAA,CACtCC,cAAA,SACImB,KAAK,OACLC,UAAQ,EACRC,IAAK9B,EACL+B,SA5CMR,IACtBrB,EAAYqB,EAAMS,OAAOnC,MAAM,EA4CfoC,MAAO,CAAEC,QAAS,UAEtB5B,eAAA,KAAAE,SAAA,CACIC,cAACG,IAAgB,CAACC,GAAG,yBAAyBC,eAAe,gDAC7DL,cAAA,QAAAD,SAAMC,cAACG,IAAgB,CAACC,GAAG,yBAAyBC,eAAe,qBAEvEL,cAAA,KAAAD,SAAGC,cAACG,IAAgB,CAACC,GAAG,0BAA0BC,eAAe,8BACjER,eAAC6B,IAAM,CAAA3B,SAAA,CAACC,cAACM,IAAI,CAACC,KAAK,WAAUP,cAACG,IAAgB,CAACC,GAAG,+BAA+BC,eAAe,yBAGxGL,cAAA,OAAAD,SACIC,cAAC0B,IAAM,CAACC,SAAO,EAACC,UAAU,EAAK7B,SAACC,cAACG,IAAgB,CAACC,GAAG,yBAAyBC,eAAe,iBAG/F,E,yCClEd,MAAMwB,EAAW,CACbC,GAAIC,EACJC,GAAIC,GAGFC,EAAWC,UAAUD,UAAYC,UAAUD,SAASE,MAAM,QAAQ,GACxEC,IAASC,WAAWC,SAASC,eAAe,SAAwBC,OAChEzC,cAAC0C,IAAY,CAACC,OAAQT,EAAUL,SAAUA,EAASK,GAAUnC,SACzDC,cAACb,EAAG,M","file":"static/js/main.7248ada2.chunk.js","sourcesContent":["import React, {useRef, useState} from 'react';\nimport {Button, Header, Icon} from \"semantic-ui-react\";\nimport {FormattedMessage} from \"react-intl\";\n\nconst App = () => {\n    const [files, setFiles] = useState<File[]>([]);\n    const fileInputRef = useRef<HTMLInputElement>(null);\n\n    const handleClick = () => {\n        fileInputRef.current?.click();\n    };\n    const handleDrop = (event: React.DragEvent<HTMLDivElement>) => {\n        event.preventDefault();\n        handleFiles(event.dataTransfer.files);\n    };\n    const handleFileChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        handleFiles(event.target.files);\n    };\n\n    const handleFiles = (newFiles: FileList | null) => {\n        if (newFiles) {\n            setFiles([...files, ...Array.from(newFiles)]);\n        }\n    };\n\n    return (\n        <div className=\"body\">\n\n            <Header as='h1'><FormattedMessage id=\"header.h1\" defaultMessage=\"Digitalize all your genealogy records into a family file\"/></Header>\n            <p><FormattedMessage id=\"header.p\" defaultMessage=\"It is (and will always be) free up to 50 relatives. Above 50 relatives, $0.5 per relative\"/> <Icon name=\"credit card\"/></p>\n\n            <div className=\"instructions-wrapper\">\n                <h2><FormattedMessage id=\"instructions.h2\" defaultMessage=\"How the tool works\"/></h2>\n                <div className=\"instructions-container\">\n                    <div className=\"instruction-box\">\n                        <h3><FormattedMessage id=\"instructions.download.h3\" defaultMessage=\"Download\"/></h3>\n                        <p><FormattedMessage id=\"instructions.download.p\" defaultMessage=\"Get here the templates to fill-in. You need: individuals, parents, and relationships.\"/></p>\n                    </div>\n                    <div className=\"instruction-box\">\n                        <h3><FormattedMessage id=\"instructions.fill-in.h3\" defaultMessage=\"Fill-in\"/></h3>\n                        <p><FormattedMessage id=\"instructions.fill-in.p\" defaultMessage=\"Fill-in each template with the family records. Check here if you have doubts.\"/></p>\n                    </div>\n                    <div className=\"instruction-box\">\n                        <h3><FormattedMessage id=\"instructions.collect.h3\" defaultMessage=\"Collect\"/></h3>\n                        <p><FormattedMessage id=\"instructions.collect.p\" defaultMessage=\"Collect your family file so you can visualize it anywhere. Know no one? Check this.\"/></p>\n                    </div>\n                </div>\n            </div>\n\n            <div className=\"ui upload-container\">\n                <div\n                    className=\"ui dropzone\"\n                    onClick={handleClick}\n                    onDrop={handleDrop}\n                    onDragOver={(e) => e.preventDefault()}>\n                    <input\n                        type=\"file\"\n                        multiple\n                        ref={fileInputRef}\n                        onChange={handleFileChange}\n                        style={{ display: \"none\" }}\n                    />\n                    <p>\n                        <FormattedMessage id=\"dropzone.p.drag-n-drop\" defaultMessage=\"Drag & drop here your filled templates, or \"/>\n                        <span><FormattedMessage id=\"dropzone.p.browse-them\" defaultMessage=\"browse them\"/></span>\n                    </p>\n                    <p><FormattedMessage id=\"dropzone.p.files-needed\" defaultMessage=\"We need all the 3 files\"/></p>\n                    <Button><Icon name=\"upload\"/><FormattedMessage id=\"dropzone.button.browse-files\" defaultMessage=\"Browse files\"/></Button>\n                </div>\n            </div>\n            <div>\n                <Button primary disabled={true}><FormattedMessage id=\"dropzone.button.submit\" defaultMessage=\"Submit\"/></Button>\n            </div>\n\n        </div>\n    );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom/client';\nimport App from './app';\nimport './assets/styles/index.css';\nimport 'semantic-ui-css/semantic.min.css';\nimport messages_es from './i18n/es.json';\nimport messages_pl from './i18n/pl.json';\nimport {IntlProvider} from \"react-intl\";\n\nconst messages = {\n    es: messages_es,\n    pl: messages_pl\n};\n\nconst language = navigator.language && navigator.language.split(/[-_]/)[0];\nReactDOM.createRoot(document.getElementById('root') as HTMLElement).render(\n    <IntlProvider locale={language} messages={messages[language]}>\n        <App/>\n    </IntlProvider>\n);"],"sourceRoot":""}