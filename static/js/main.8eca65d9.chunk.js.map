{"version":3,"sources":["app.tsx","index.tsx"],"names":["resources","es","resources_es","pl","resources_pl","App","message","setMessage","useState","visible","setVisible","files","setFiles","fileInputRef","useRef","showMessage","msg","setTimeout","handleFiles","newFiles","Array","from","_jsxs","className","children","_jsx","Message","positive","type","negative","onDismiss","Header","header","text","as","FormattedMessage","id","defaultMessage","Icon","name","onClick","downloadTemplates","_resources$language$t","_resources$language","templatesFileName","language","fetch","then","response","blob","_resources$language$i","_resources$language2","_resources$language$p","_resources$language3","_resources$language$r","_resources$language4","saveAs","_Fragment","catch","error","console","handleUploadClick","_fileInputRef$current","current","click","onDrop","event","preventDefault","dataTransfer","onDragOver","e","multiple","ref","onChange","target","style","display","Button","primary","disabled","messages","messages_es","messages_pl","navigator","split","ReactDOM","createRoot","document","getElementById","render","IntlProvider","locale"],"mappings":"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","file":"static/js/main.8eca65d9.chunk.js","sourcesContent":["import React, {ReactNode, useRef, useState} from 'react';\nimport {Button, Header, Icon, Message} from \"semantic-ui-react\";\nimport {saveAs} from \"file-saver\";\nimport language from \"./index\";\nimport {FormattedMessage} from \"react-intl\";\nimport resources_es from \"./i18n/resources/es.json\";\nimport resources_pl from \"./i18n/resources/pl.json\";\n\nconst resources = {\n    es: resources_es,\n    pl: resources_pl\n};\n\ninterface MessageState {\n    type: \"positive\" | \"negative\";\n    header: ReactNode;\n    text: ReactNode;\n}\n\nconst App = () => {\n    const [message, setMessage] = useState<MessageState | null>(null);\n    const [visible, setVisible] = useState(false); // messages visibility\n\n    const [files, setFiles] = useState<File[]>([]);\n    const fileInputRef = useRef<HTMLInputElement>(null);\n\n    const downloadTemplates = () => {\n        const templatesFileName = resources[language]?.[\"templates.zip\"] ?? \"templates.zip\";\n        const templatesFilePath = `${process.env.PUBLIC_URL}/templates/${language}/${templatesFileName}`;\n        fetch(templatesFilePath)\n            .then((response) => response.blob())\n            .then((blob) => {\n                saveAs(blob, templatesFileName);\n                showMessage({\n                    type: \"positive\",\n                    header: (\n                        <FormattedMessage\n                            id=\"instructions.templates.downloaded\"\n                            defaultMessage=\"Review your Downloads folder\"/>\n                    ),\n                    text: (\n                        <>\n                        <FormattedMessage\n                            id=\"instructions.templates.compressed\"\n                            defaultMessage=\"You will find the assets.templates in the compressed file:\"/>&nbsp;\n                            <span>{resources[language]?.[\"individuals.csv\"] ?? \"1-individuals.csv\"}</span>,&nbsp;\n                            <span>{resources[language]?.[\"parents.csv\"] ?? \"2-parents.csv\"}</span>,&nbsp;\n                            <span>{resources[language]?.[\"relationships.csv\"] ?? \"3-relationships.csv\"}</span>\n                        </>\n                    )\n                });\n            })\n            .catch((error) => console.error(\"Download failed:\", error));\n    };\n\n    const showMessage = (msg: MessageState) => {\n        // Function to show and fade out the message\n        setMessage(msg);\n        setVisible(true);\n        setTimeout(() => setVisible(false), 15000);\n        setTimeout(() => setMessage(null), 20000);\n    };\n\n    const handleUploadClick = () => {\n        fileInputRef.current?.click();\n    };\n    const handleUploadDrop = (event: React.DragEvent<HTMLDivElement>) => {\n        event.preventDefault();\n        handleFiles(event.dataTransfer.files);\n    };\n    const handleFileChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        handleFiles(event.target.files);\n    };\n\n    const handleFiles = (newFiles: FileList | null) => {\n        if (newFiles) {\n            setFiles([...files, ...Array.from(newFiles)]);\n        }\n    };\n\n    return (\n        <div className=\"body\">\n\n            {/* MESSAGES SECTION ----------------------------------------------------------------------------------- */}\n            {message && (\n                <div className={`message-container ${visible ? \"expanded\" : \"collapsed\"}`}>\n                    <Message\n                        positive={message.type === \"positive\"}\n                        negative={message.type === \"negative\"}\n                        onDismiss={() => setMessage(null)}>\n                            <Message.Header>{message.header}</Message.Header>\n                            <p>{message.text}</p>\n                    </Message>\n                </div>\n            )}\n            {/* MESSAGES SECTION ----------------------------------------------------------------------------------- */}\n\n            <Header as='h1'><FormattedMessage id=\"header.h1\" defaultMessage=\"Digitalize all your genealogy records into a family file\"/></Header>\n            <p><FormattedMessage id=\"header.p\" defaultMessage=\"It is (and will always be) free up to 50 relatives. Above 50 relatives, $0.5 per relative\"/> <Icon name=\"credit card\"/></p>\n\n            {/* INSTRUCTIONS SECTION ------------------------------------------------------------------------------- */}\n            <div className=\"instructions-wrapper\">\n                <h2><FormattedMessage id=\"instructions.h2\" defaultMessage=\"How the tool works\"/></h2>\n                <div className=\"instructions-container\">\n                    <div className=\"instruction-box\" onClick={downloadTemplates}>\n                        <h3><FormattedMessage id=\"instructions.download.h3\" defaultMessage=\"Download\"/></h3>\n                        <p><FormattedMessage id=\"instructions.download.p\" defaultMessage=\"Get here the assets.templates to fill-in. You need: individuals, parents, and relationships.\"/></p>\n                    </div>\n                    <div className=\"instruction-box\">\n                        <h3><FormattedMessage id=\"instructions.fill-in.h3\" defaultMessage=\"Fill-in\"/></h3>\n                        <p><FormattedMessage id=\"instructions.fill-in.p\" defaultMessage=\"Fill-in each template with the family records. Check here if you have doubts.\"/></p>\n                    </div>\n                    <div className=\"instruction-box\">\n                        <h3><FormattedMessage id=\"instructions.collect.h3\" defaultMessage=\"Collect\"/></h3>\n                        <p><FormattedMessage id=\"instructions.collect.p\" defaultMessage=\"Collect your family file so you can visualize it anywhere. Know no one? Check this.\"/></p>\n                    </div>\n                </div>\n            </div>\n            {/* INSTRUCTIONS SECTION ------------------------------------------------------------------------------- */}\n\n            {/* UPLOAD SECTION ------------------------------------------------------------------------------------- */}\n            <div className=\"ui upload-container\">\n                <div\n                    className=\"ui dropzone\"\n                    onClick={handleUploadClick}\n                    onDrop={handleUploadDrop}\n                    onDragOver={(e) => e.preventDefault()}>\n                    <input\n                        type=\"file\"\n                        multiple\n                        ref={fileInputRef}\n                        onChange={handleFileChange}\n                        style={{ display: \"none\" }}\n                    />\n                    <p>\n                        <FormattedMessage id=\"dropzone.p.drag-n-drop\" defaultMessage=\"Drag & drop here your filled assets.templates, or \"/>\n                        <span><FormattedMessage id=\"dropzone.p.browse-them\" defaultMessage=\"browse them\"/></span>\n                    </p>\n                    <p><FormattedMessage id=\"dropzone.p.files-needed\" defaultMessage=\"We need all the 3 files\"/></p>\n                    <Button><Icon name=\"upload\"/><FormattedMessage id=\"dropzone.button.browse-files\" defaultMessage=\"Browse files\"/></Button>\n                </div>\n            </div>\n            <div>\n                <Button primary disabled={true}><FormattedMessage id=\"dropzone.button.submit\" defaultMessage=\"Submit\"/></Button>\n            </div>\n            {/* UPLOAD SECTION ------------------------------------------------------------------------------------- */}\n\n        </div>\n    );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom/client';\nimport App from './app';\nimport './assets/styles/index.css';\nimport 'semantic-ui-css/semantic.min.css';\nimport messages_es from './i18n/literals/es.json';\nimport messages_pl from './i18n/literals/pl.json';\nimport resources_es from \"./i18n/resources/es.json\";\nimport resources_pl from \"./i18n/resources/pl.json\";\nimport {IntlProvider} from \"react-intl\";\n\nconst messages = {\n    es: messages_es,\n    pl: messages_pl\n};\nconst resources = {\n    es: resources_es,\n    pl: resources_pl\n};\n\nconst language = navigator.language && navigator.language.split(/[-_]/)[0];\n\nReactDOM.createRoot(document.getElementById('root') as HTMLElement).render(\n    <IntlProvider locale={language} messages={messages[language]}>\n        <App/>\n    </IntlProvider>\n);\nexport default language"],"sourceRoot":""}